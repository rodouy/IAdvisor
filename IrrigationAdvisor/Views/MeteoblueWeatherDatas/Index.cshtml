@model IEnumerable<IrrigationAdvisor.Models.Weather.MeteoblueWeatherData>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    $(document).ready(function () {

        var getUrlParameter = function getUrlParameter(sParam) {
            var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                sURLVariables = sPageURL.split('&'),
                sParameterName,
                i;

            for (i = 0; i < sURLVariables.length; i++) {
                sParameterName = sURLVariables[i].split('=');

                if (sParameterName[0] === sParam) {
                    return sParameterName[1] === undefined ? true : sParameterName[1];
                }
            }
        };
      
        var dateFrom = $('#dateFrom');
        var dateTo = $('#dateTo');
        var btnSearch = $('#btnSearch');
        var monthValue;

        if ((moment().month() + 1) < 10)
        {
            monthValue = '0' + (moment().month() + 1);
        }
        else
        {
            monthValue = (moment().month() + 1);
        }
        
        var today = moment().year() + '-' + monthValue + '-' + moment().date();
        //yyyy-MM-dd

        var startDate = getUrlParameter('dateFrom');
        
        var endDate = getUrlParameter('dateTo');
        
        var weatherStation = getUrlParameter('weatherStationId');

        if (startDate && endDate)
        {
            $('#dateFrom').val(startDate);
            $('#dateTo').val(endDate);
        }
        else
        {
            $('#dateFrom').val(today);
            $('#dateTo').val(today);
        }

        $.ajax({
            type: 'GET',
            url: './WeatherDatas/GetAllWeatherStations',
            success: function (data) {

                var values = JSON.stringify(data);
                var ele = $('#weatherStations');

                ele.empty();
                ele.append('<option value="0">Todas</option>');
                $.each($.parseJSON(values), function (key, value) {
                    ele.append('<option value="' + value.WeatherStationId + '">' + value.Name + '</option>');
                });

                if (weatherStation) {
                    $('#weatherStations').val(weatherStation);
                }
            },
            error: function (data) {
               
                console.log(data);
            }
        });

        btnSearch.click(function ()
        {
            location.href = 'MeteoblueWeatherDatas?dateFrom=' + dateFrom.val() + '&dateTo=' + dateTo.val() + '&weatherStationId=' + $('#weatherStations').val();
        });
    })
</script>
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <td>
            Fecha desde: <input type="date" id="dateFrom" />
        </td>
        <td>
            Fecha hasta: <input type="date" id="dateTo" />
        </td>
        <td>
            Weather Station: <select id="weatherStations"></select>&nbsp;&nbsp; <button id="btnSearch">Buscar</button>
        </td>
    </tr>
</table>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.WeatherStationId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WeatherDate)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.UvIndex)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TemperatureMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TemperatureMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TemperatureMean)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FeltTemperatureMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FeltTemperatureMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WindDirection)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PrecipitationProbability)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rainspot)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PredictabilityClass)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Predictability)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Precipitation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SnowFraction)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SealevelPressureMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SealevelPressureMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SealevelPressureMean)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WindSpeedMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WindSpeedMean)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WindSpeedMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RelativeHumidityMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RelativeHumidityMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RelativehumidityMean)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ConvectivePrecipitation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PrecipitationHours)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HumidityGreater90Hours)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SoilTemperatureMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SoilTemperatureMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SoilTemperatureMean)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SoilMoistureMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SoilMoistureMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SoilMoistureMean)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SkinTemperatureMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SkinTemperatureMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SkinTemperatureMean)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Evapotranspiration)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LeafWetnessIndex)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PotentialEvapotranspiration)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DewPointTemperatureMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DewPointTemperatureMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DewPointTemperatureMean)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReferenceEvapotranspirationFao)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SensibleHeatFlux)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastModificationDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BasicJson)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BasicUrl)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AgroJson)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AgroUrl)
        </th>*@
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.WeatherStation.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WeatherDate)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.UvIndex)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TemperatureMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TemperatureMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TemperatureMean)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FeltTemperatureMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FeltTemperatureMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WindDirection)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PrecipitationProbability)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Rainspot)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PredictabilityClass)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Predictability)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Precipitation)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SnowFraction)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SealevelPressureMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SealevelPressureMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SealevelPressureMean)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WindSpeedMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WindSpeedMean)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WindSpeedMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RelativeHumidityMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RelativeHumidityMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RelativehumidityMean)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ConvectivePrecipitation)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PrecipitationHours)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HumidityGreater90Hours)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SoilTemperatureMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SoilTemperatureMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SoilTemperatureMean)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SoilMoistureMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SoilMoistureMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SoilMoistureMean)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SkinTemperatureMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SkinTemperatureMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SkinTemperatureMean)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Evapotranspiration)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LeafWetnessIndex)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PotentialEvapotranspiration)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DewPointTemperatureMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DewPointTemperatureMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DewPointTemperatureMean)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReferenceEvapotranspirationFao)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SensibleHeatFlux)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastModificationDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BasicJson)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BasicUrl)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AgroJson)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AgroUrl)
        </td>*@
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.MeteoblueWeatherDataId }) |
            @Html.ActionLink("Details", "Details", new { id=item.MeteoblueWeatherDataId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.MeteoblueWeatherDataId })
        </td>
    </tr>
}

</table>
