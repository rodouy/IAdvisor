@model IrrigationAdvisor.ViewModels.Agriculture.CropViewModel
        
@{
    ViewBag.Title = "Edit";
  //  Layout = "Agriculture";
}
<script src="~/js/Home.js"></script>
<script js>

    $(document).ready(function () {
        loadSpecies(@Model.RegionId );
        loadCropCoefficients(@Model.SpecieId )


        saveBtn.click(function () {
            var validateForm = true;

            if ($('#ShortName').val().trim() != '') {
                $('#ShortNameError').html('');
                validateForm = true;
            }
            else {
                $('#ShortNameError').html('Ingrese el nombre');
                validateForm = false;
            }

            if (validateForm == true) {
                if ($('#MaxEvapotranspirationToIrrigate').val().trim() != '' || $('#MaxEvapotranspirationToIrrigate').val().trim() != '0') {
                    if (!isNumber($("#MaxEvapotranspirationToIrrigate").val())) {
                        $("#MaxEvapotranspirationToIrrigateError").html("Ingrese solo números");
                        validateForm = false;
                    }
                    else {
                        $('#MaxEvapotranspirationToIrrigateError').html('');
                        validateForm = true;
                    }
                }
                else {
                    $('#MaxEvapotranspirationToIrrigateError').html('Ingrese el máximo');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#MinEvapotranspirationToIrrigate').val().trim() != '' || $('#MinEvapotranspirationToIrrigate').val().trim() != '0') {
                    if (!isNumber($("#MinEvapotranspirationToIrrigate").val())) {
                        $("#MinEvapotranspirationToIrrigateError").html("Ingrese solo números");
                        validateForm = false;
                    }
                    else {
                        $('#MinEvapotranspirationToIrrigateError').html('');
                        validateForm = true;
                    }
                }
                else {
                    $('#MinEvapotranspirationToIrrigateError').html('Ingrese el mínimo');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#StopIrrigationStageId').val().trim() != '') {
                    $('#StopIrrigationStageIdError').html('');
                    validateForm = true;
                }
                else {
                    $('#StopIrrigationStageIdError').html('Seleccione un estadio');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#StopIrrigationStageId').val().trim() != '') {
                    $('#StopIrrigationStageIdError').html('');
                    validateForm = true;
                }
                else {
                    $('#StopIrrigationStageIdError').html('Seleccione un estadio');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#MinStageToConsiderETinHBCalculationId').val().trim() != '' || $('#MinStageToConsiderETinHBCalculationId').val() == "0") {
                    $('#MinStageToConsiderETinHBCalculationIdError').html('');
                    validateForm = true;
                }
                else {
                    $('#MinStageToConsiderETinHBCalculationIdError').html('Seleccione un estadio');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#RegionId').val().trim() != '' || $('#RegionId').val() == "0") {
                    $('#RegionIdError').html('');
                    validateForm = true;
                }
                else {
                    $('#RegionIdError').html('Seleccione una región');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#SpecieId').val().trim() != '' || $('#SpecieId').val() == "0") {
                    $('#SpecieIdError').html('');
                    validateForm = true;
                }
                else {
                    $('#SpecieIdError').html('Seleccione una especie');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#CropCoefficientId').val().trim() != '' || $('#CropCoefficientId').val() == "0") {
                    $('#CropCoefficientIdError').html('');
                    validateForm = true;
                }
                else {
                    $('#CropCoefficientIdError').html('Seleccione coefeciente');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                $('#myForm').submit();
            }
        });
    });

    function isNumber(n) {
        'use strict';
        n = n.replace(/\./g, '').replace(',', '.');
        return !isNaN(parseFloat(n)) && isFinite(n);
    }

    function loadSpecies(pRegionId) {
        var select = $("#SpecieId");
        select.empty();
        var pRegionId = $('#RegionId').val();
        if (pRegionId != "") {
            $.getJSON("/Crops/GetSpeciesByRegionId", { regionId: pRegionId },
                   function (data) {
                       var values = JSON.stringify(data);
                       select.append($('<option/>', {
                           value: 0,
                           text: "-- Seleccion la especie --"
                       }));

                       var i = 0;
                       $.each($.parseJSON(values), function (key, value) {

                           if (@Model.SpecieId == value.Value)
                               select.append('<option selected value="' + value.Value + '">' + value.Text + '</option>');
                           else
                               select.append('<option value="' + value.Value + '">' + value.Text + '</option>');
                           i++;
                       });


                   });
        }
    }

    function loadCropCoefficients(pSpecieId) {
        var select = $("#CropCoefficientId");
        select.empty();
        if (pSpecieId != "") {
            $.getJSON("/Crops/GetCropCoefficientsBySpecieId", { specieId: pSpecieId },
                   function (data) {
                       var values = JSON.stringify(data);
                       select.append($('<option/>', {
                           value: 0,
                           text: "-- Seleccion la especie del cultivo --"
                       }));

                       var i = 0;
                       $.each($.parseJSON(values), function (key, value) {

                           if (@Model.CropCoefficientId == value.Value)
                               select.append('<option selected value="' + value.Value + '">' + value.Text + '</option>');
                           else
                               select.append('<option value="' + value.Value + '">' + value.Text + '</option>');
                           i++;
                       });
                   });
        }
    }


</script>
<h2>Editar</h2>


@using (Html.BeginForm("Edit", "Crops", FormMethod.Post, new { id = "myForm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Crop</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CropId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                <span id="ShortNameError" class="red-color"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxEvapotranspirationToIrrigate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxEvapotranspirationToIrrigate, new { htmlAttributes = new { @class = "form-control" } })
                <span id="MaxEvapotranspirationToIrrigate" class="red-color"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinEvapotranspirationToIrrigate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinEvapotranspirationToIrrigate, new { htmlAttributes = new { @class = "form-control" } })
                <span id="MinEvapotranspirationToIrrigate" class="red-color"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StopIrrigationStageId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StopIrrigationStageId, Model.Stages, "-- Selecione estadio --", new { @class = "form-control" })
                <span id="StopIrrigationStageIdError" class="red-color"></span>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinStageToConsiderETinHBCalculationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MinStageToConsiderETinHBCalculationId, Model.Stages, "-- Selecione estadio --", new { @class = "form-control" })
                <span id="MinStageToConsiderETinHBCalculationIdError" class="red-color"></span>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RegionId, Model.Regions, "-- Selecione la región --", new { @class = "form-control", @onchange = "loadSpecies(this.value)" })
                @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpecieId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="SpecieId" name="SpecieId" class="form-control" onchange="loadCropCoefficients(this.value)">
                    <option value="">-- Seleccione la especie --</option>

                </select>
                <span id="SpecieIdError" class="red-color"></span>
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(model => model.CropCoefficientId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="CropCoefficientId" name="CropCoefficientId" class="form-control">
                    <option value="">-- Seleccione el coeficiente del cultivo --</option>
                </select>
                <span id="CropCoefficientIdError" class="red-color"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="&nbsp;&nbsp;&nbsp;Guardar&nbsp;&nbsp;&nbsp;" class="btn btn-default" />&nbsp;&nbsp;&nbsp;&nbsp;@Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

<div>
    &nbsp;
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
