@model IrrigationAdvisor.ViewModels.Agriculture.CropViewModel

@{
    ViewBag.Title = "Create";
}


<h2>Nuevo</h2>
<script js>
$(document).ready(function () {
    var saveBtn = $('#SaveBtn');
    function isNumber(n) {
        'use strict';
        n = n.replace(/\./g, '').replace(',', '.');
        return !isNaN(parseFloat(n)) && isFinite(n);
    }

    saveBtn.click(function () {
        var validateForm = true;

        if ($('#ShortName').val().trim() != '') {
            $('#ShortNameError').html('');
            validateForm = true;
        }
        else {
            $('#ShortNameError').html('Ingrese el nombre');
            validateForm = false;
        }

        if (validateForm == true) {
            if ($('#MaxEvapotranspirationToIrrigate').val().trim() != '' || $('#MaxEvapotranspirationToIrrigate').val().trim() != '0') {
                if (!isNumber($("#MaxEvapotranspirationToIrrigate").val())) {
                    $("#MaxEvapotranspirationToIrrigateError").html("Ingrese solo números");
                    validateForm = false;
                }
                else {
                    $('#MaxEvapotranspirationToIrrigateError').html('');
                    validateForm = true;
                }
            }
            else {
                $('#MaxEvapotranspirationToIrrigateError').html('Ingrese el máximo');
                validateForm = false;
            }
        }

        if (validateForm == true) {
            if ($('#MinEvapotranspirationToIrrigate').val().trim() != '' || $('#MinEvapotranspirationToIrrigate').val().trim() != '0') {
                if (!isNumber($("#MinEvapotranspirationToIrrigate").val())) {
                    $("#MinEvapotranspirationToIrrigateError").html("Ingrese solo números");
                    validateForm = false;
                }
                else {
                    $('#MinEvapotranspirationToIrrigateError').html('');
                    validateForm = true;
                }
            }
            else {
                $('#MinEvapotranspirationToIrrigateError').html('Ingrese el mínimo');
                validateForm = false;
            }
        }

        if (validateForm == true) {
            if ($('#StopIrrigationStageId').val().trim() != '') {
                $('#StopIrrigationStageIdError').html('');
                validateForm = true;
            }
            else {
                $('#StopIrrigationStageIdError').html('Seleccione un estadio');
                validateForm = false;
            }
        }

        if (validateForm == true) {
            if ($('#StopIrrigationStageId').val().trim() != '') {
                $('#StopIrrigationStageIdError').html('');
                validateForm = true;
            }
            else {
                $('#StopIrrigationStageIdError').html('Seleccione un estadio');
                validateForm = false;
            }
        }

        if (validateForm == true) {
            if ($('#MinStageToConsiderETinHBCalculationId').val().trim() != '' || $('#MinStageToConsiderETinHBCalculationId').val() == "0") {
                $('#MinStageToConsiderETinHBCalculationIdError').html('');
                validateForm = true;
            }
            else {
                $('#MinStageToConsiderETinHBCalculationIdError').html('Seleccione un estadio');
                validateForm = false;
            }
        }

        if (validateForm == true) {
            if ($('#RegionId').val().trim() != '' || $('#RegionId').val() == "0") {
                $('#RegionIdError').html('');
                validateForm = true;
            }
            else {
                $('#RegionIdError').html('Seleccione una región');
                validateForm = false;
            }
        }

        if (validateForm == true) {
            if ($('#SpecieId').val().trim() != '' || $('#SpecieId').val() == "0") {
                $('#SpecieIdError').html('');
                validateForm = true;
            }
            else {
                $('#SpecieIdError').html('Seleccione una especie');
                validateForm = false;
            }
        }

        if (validateForm == true) {
            if ($('#CropCoefficientId').val().trim() != '' || $('#CropCoefficientId').val() == "0") {
                $('#CropCoefficientIdError').html('');
                validateForm = true;
            }
            else {
                $('#CropCoefficientIdError').html('Seleccione coefeciente');
                validateForm = false;
            }
        }

        if (validateForm == true) {
            $('#myForm').submit();
        }
    });


    $('#RegionId').on('change', function (value) {
        var select = $("#SpecieId");
        select.empty();
        var pRegionId = $('#RegionId').val();
        if (pRegionId != "") {
            $.getJSON("/Crops/GetSpeciesByRegionId", { regionId: pRegionId },
                   function (data) {

                       select.append($('<option/>', {
                           value: 0,
                           text: "-- Seleccion la especie --"
                       }));
                       $.each(data, function (index, itemData) {
                           select.append($('<option/>', {
                               value: itemData.Value,
                               text: itemData.Text
                           }));
                       });
                   });
        }

    });

    $('#SpecieId').on('change', function (value) {
        var select = $("#CropCoefficientId");
        select.empty();
        var pSpecieId = $('#SpecieId').val();
        if (pSpecieId != "") {
            $.getJSON("/Crops/GetCropCoefficientsBySpecieId", { specieId: pSpecieId },
                   function (data) {

                       select.append($('<option/>', {
                           value: 0,
                           text: "-- Seleccion la especie del cultivo --"
                       }));
                       $.each(data, function (index, itemData) {
                           select.append($('<option/>', {
                               value: itemData.Value,
                               text: itemData.Text
                           }));
                       });
                   });
        }

    });
 });
</script>

@using (Html.BeginForm("Create", "Crops", FormMethod.Post, new { id = "myForm" }))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Crop</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                <span id="ShortNameError" class="red-color"></span>
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.MaxEvapotranspirationToIrrigate, htmlAttributes: new { @class = "control-label col-md-2", })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaxEvapotranspirationToIrrigate, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                <span id="MaxEvapotranspirationToIrrigateError" class="red-color"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinEvapotranspirationToIrrigate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.MinEvapotranspirationToIrrigate, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                   <span id="MinEvapotranspirationToIrrigateError" class="red-color"></span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StopIrrigationStageId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StopIrrigationStageId, Model.Stages, "-- Selecione estadio --", new { @class = "form-control" })
                <span id="StopIrrigationStageIdError" class="red-color"></span>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinStageToConsiderETinHBCalculationId,  htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MinStageToConsiderETinHBCalculationId, Model.Stages, "-- Selecione estadio --", new { @class = "form-control" })
                <span id="MinStageToConsiderETinHBCalculationIdError" class="red-color"></span>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RegionId, Model.Regions, "-- Selecione establecimiento --", new { @class = "form-control", @onchange = "onChangeRegion(this.value)" })
                <span id="RegionId" class="red-color"></span>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpecieId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="SpecieId" name="SpecieId" class="form-control" onchange="onChangeSpecie(this.value)">
                    <option value="">-- Seleccione la especie --</option>

                </select>
                <span id="SpecieIdError" class="red-color"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CropCoefficientId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="CropCoefficientId" name="CropCoefficientId" class="form-control" >
                    <option value="">-- Seleccione el coeficiente del cultivo --</option>
                </select>
                <span id="CropCoefficientIdError" class="red-color"></span>
            </div>
        </div>
        <div class="cf footer">
            <label class="control-label col-md-2" for="CapitalId"></label>

            <input type="button" value="&nbsp;&nbsp;&nbsp;Gaurdar&nbsp;&nbsp;&nbsp;" id="SaveBtn" class="btn btn-default" />
            &nbsp;&nbsp;&nbsp;&nbsp;
            @Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-default" })

        </div>
    </div>

}

<div>
    &nbsp;
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
