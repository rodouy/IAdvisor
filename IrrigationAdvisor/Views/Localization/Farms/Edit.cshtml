@model IrrigationAdvisor.ViewModels.Localization.FarmViewModel

@{
    ViewBag.Title = "Editar";
    //Layout = "Localization";
}
<link rel="stylesheet" type="text/css" href="~/css/modal.css">
<script src="~/js/Home.js"></script>
<h2>Editar</h2>
<h4>Farm</h4>
<hr />
<script js>
    $(document).ready(function () {

        var cityId = $('#CityId');
        var modalCity = $('#modal-city');
        var addCityModal = $('#addCityModal');
        var cancelCity = $('#CancelCity');
        var saveCityBtn = $('#SaveCity');
        var cityName = $('#CityName');
        var countryId = $('#CountryId');
        var expresionLatitudeLongitud = /^(-([1-8]?[1-9]|[1-9]0)\,{1}\d{1,6})/;

        var loadCityFarms = function (pCityId) {
            //var cityId = pCityId;
            $.ajax({
                type: 'GET',
                url: '/Farms/GetCities',
                success: function (data) {
                    cityId.empty();
                    if (jQuery.type(data) == "array" && data.length > 0) {
                        var values = JSON.stringify(data);

                        var i = 0;
                        $.each($.parseJSON(values), function (key, value) {

                            if (pCityId == value.CityId)
                                cityId.append('<option selected value="' + value.CityId + '">' + value.Name + '</option>');
                            else
                                cityId.append('<option value="' + value.CityId + '">' + value.Name + '</option>');
                            i++;
                        });
                    }
                    else {
                        console.log("Error on GetCities. - " + data);
                    }

                },
                error: function (data) {

                    console.log("Error on GetCities");

                }
            });
        };


        var init = function () {
            var initModal = { backdrop: false, show: false };
            //addCityModal.hide();
            loadCityFarms(@Model.CityId);

            modalCity.modal(initModal);
        };

        var addClasses = function()
        {
            addCityModal.css("background-color", "#00a1d3");
        }

        $(window).resize(function () {

            var width = $(window).width();
            var height = $(window).height();

            if (width <= 760) {
                removeClasses();
            }
            else {
                addClasses();
            }
        });


        $.getScript("https://code.jquery.com/ui/1.12.0/jquery-ui.js", function () {
            var addCityModal = $('#addCityModal');
            var width = $(window).width();
            var height = $(window).height();
        });

        $("#addCityModal").click(function () {
            modalCity.modal('show');
            $('.modal-content').draggable();
        });

        cancelCity.click(function () {
            modalCity.modal('hide');
        });

        saveCityBtn.click(function ()
        {
            var validateForm = true;
    
            if ($('#CityName').val().trim() != '') {
                $('#CityNameError').html(''); 
                validateForm = true;
            }
            else {
                $('#CityNameError').html('Ingrese el nombre');
                 validateForm = false;
            }

            if (validateForm == true)
            {
                if ($('#CountryId').val().trim() != '') {
                    $('#CountryIdError').html('');
                    validateForm = true;
                }
                else {
                    $('#CountryIdError').html('Seleccione el país');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#CityLatitud').val().trim() != '') {
                    if (!expresionLatitudeLongitud.test($("#CityLatitud").val())) {
                        $("#CityLatitudError").html("La latitud no esta correctamente ingresada (Ej: -45,4455)");
                        validateForm = false;
                    }
                    else {
                        $('#CityLatitudError').html('');
                        validateForm = true;
                    }
                }
                else {
                    $('#CityLatitudError').html('Ingrese latitud');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#CityLongitud').val().trim() != '') {
                    if (!expresionLatitudeLongitud.test($("#CityLongitud").val())) {
                        $("#CityLongitudError").html("La longitud no esta correctamente ingresada (Ej: -45,4455)");
                        validateForm = false;
                    }
                    else {
                        $('#CityLongitudError').html('');
                        validateForm = true;
                    }
                }
                else {
                    $('#CityLongitudError').html('Ingrese longitud');
                    validateForm = false;
                }
            }

            if (validateForm == true)
            {
                modalCity.modal('hide');
                saveCityBtn.attr('disabled', true);
                addCity($('#CityName').val().trim(), $('#CountryId').val(), $('#CityLatitud').val().trim(), $('#CityLongitud').val().trim());
            }

    /*

            if ($('#CityName').val().trim() != '')
            {
                $('#CityNameError').html('');

                if ($('#CountryId').val().trim() != '') {
                    $('#CountryIdError').html('');

                    if ($('#CityLatitud').val().trim() != '') {
                        $('#CityLatitud').html('');

                        if ($('#CityLongitud').val().trim() != '') {
                            $('#CityLongitudError').html('');
                            modalCity.modal('hide');

                            saveCityBtn.attr('disabled', true);

                           // showLoading();
                            addCity($('#CityName').val().trim(), $('#CountryId').val(), $('#CityLatitud').val().trim(), $('#CityLongitud').val().trim());
                        }
                        else {
                            $('#CityLongitudError').html('Ingrese longitud');
                        }
                    }
                    else {
                        $('#CityLatitudError').html('Ingrese latitud');

                    }
                }
                else {

                    $('#CountryIdError').html('Seleccione el país');
                }
            } else {

               // saveRainBtn.attr('href', '');
                //rainMilimeters.addClass('input-red-border');
                $('#CityNameError').html('Ingrese el nombre');

            }
    */
        });

        init();

        var addCity = function (pCityName, pCountryId, pCityLatitude, pCityLongitude)
        {
            var pUrl = '/Farms/AddCity?pCityName=' + pCityName +
                            '&pCountryId=' + pCountryId +
                            '&pCityLatitude=' + pCityLatitude +
                            '&pCityLongitude=' + pCityLongitude;

            $('#floatingCirclesG').show();
            $.ajax({
                type: 'GET',
                url: pUrl,
                success:function(response)
                {
                    if (response.success) {
                        var cityId = response.responseText;
                        loadCityFarms(cityId);

                    }
                    else
                    {
                        sendMail("Error al guardar Ciudad", data);
                        console.log(data);
                        hideLoading();
                    }
                },
                error: function(response)
                {
                    hideLoading();
                    sendMail("Error al guardar Ciudad", data);
                    console.log(data);
                    //$('#myModal').modal('hide');
                }
            });

        }


    });
</script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.FarmId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Has, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Has, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Has, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control margin-bottom-10" id="CityId" name="CityId"  style="width: 100%"></select>

                <a  id="addCityModal" href="#" return false;">Agregar ciudad</a>

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WeatherStationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.WeatherStationId, Model.WeatherStations,  new { @class = "form-control" } )
            </div>
        </div>     
          <div class="form-group">
            @Html.LabelFor(model => model.IrrigationUnitReportShowAvailableWater, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IrrigationUnitReportShowAvailableWater)
                @Html.ValidationMessageFor(model => model.Has, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IrrigationUnitReportShowEvapotranspiration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IrrigationUnitReportShowEvapotranspiration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Has, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IrrigationUnitReportShowTemperature, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IrrigationUnitReportShowTemperature)
                @Html.ValidationMessageFor(model => model.Has, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="&nbsp;&nbsp;&nbsp;Guardar&nbsp;&nbsp;&nbsp;" class="btn btn-default" />&nbsp;&nbsp;&nbsp;&nbsp;@Html.ActionLink("Volver a la lista", "Index", null, new {@class = "btn btn-default"} )
            </div>
        </div>


        <!--NuevaCiudad-->
        <div id="modal-city" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="header">
                        <h2>Nueva ciudad</h2>
                    </div>
                    <div class="copy">
                        <p>  </p>
                        <form role="form" id="irrigationForm">
                            <div class="form-group">

                                <div class="col-md-10">
                                    Nombre
                                    <input type="text" placeholder="Ingrese nombre" class="form-control" id="CityName" name="CityName" min="1" max="50" />

                                    <span id="CityNameError" class="red-color"></span>
                                </div>
                                    <br/><br/><br /><br />
                                <div class="col-md-10">
                                    País
                                        <select id="CountryId" name="CountryId" class="form-control">
                                            <option value="">-- Seleccione País --</option>
                                            @foreach (var item in Model.Countries)
                                            {
                                                <option value=@item.Value>@item.Text</option>
                                            }

                                        </select>  
                                    <span id="CountryIdError" class="red-color"></span>                               
                                </div>
                                  <br/><br /><br /><br />
                                <div class="col-md-10">
                                    Latitud
                                    <input type="text" placeholder="Ingrese latitud. Ej: -45,124456" class="form-control" id="CityLatitud" name="CityLatitud" min="1" max="50" />
                                    <span id="CityLatitudError" class="red-color"></span>
                                </div>
                                      <br /><br /><br /><br />
                                <div class="col-md-10">
                                    Longitud
                                    <input type="text" placeholder="Ingrese longitud. Ej: -45,124456 " class="form-control" id="CityLongitud" name="CityLongitud" min="1" max="50" />
                                    <span id="CityLongitudError" class="red-color"></span>  
                                </div>
                                <br />
                            </div>
                        </form>
                    </div>
                    <div class="cf footer">
                        <p>
                            <input type="button" class="btn btn-style-2" id="CancelCity" value="Cancelar">
                        </p>
                        <input type="button" class="btn btn-success" id="SaveCity" value="Guardar">

                    </div>
                </div>
            </div>
        </div>
        <!--EndNuevaCiudad-->

    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
