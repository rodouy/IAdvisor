@model IrrigationAdvisor.ViewModels.Security.EditUserViewModel

@{
    ViewBag.Title = "Edit";
   // Layout = "";
}
<script js>
    $(document).ready(function () {


        function loadFarmsId() {
            var options = $('#FarmSelected option');
            var farms = "";
            var values = $.map(options, function (option) {
                if (farms == "")
                    farms = option.value
                else
                    farms = farms + "|" + option.value

            });
            $('#FarmIdSelected').val(farms);

        }

        $('#btnRight').click(function (e) {
            var selectedOpts = $('#FarmId option:selected');
            if (selectedOpts.length == 0) {
                alert("Nothing to move.");
                e.preventDefault();
            }
            $('#FarmSelected').append($(selectedOpts).clone());
            $(selectedOpts).remove();
            e.preventDefault();
        });
        $('#btnAllRight').click(function (e) {
            var selectedOpts = $('#FarmId option');
            if (selectedOpts.length == 0) {
                alert("Nothing to move.");
                e.preventDefault();
            }
            $('#FarmSelected').append($(selectedOpts).clone());
            $(selectedOpts).remove();
            e.preventDefault();
        });
        $('#btnLeft').click(function (e) {
            var selectedOpts = $('#FarmSelected option:selected');
            if (selectedOpts.length == 0) {
                alert("Nothing to move.");
                e.preventDefault();
            }
            $('#FarmId').append($(selectedOpts).clone());
            $(selectedOpts).remove();
            e.preventDefault();
        });
        $('#btnAllLeft').click(function (e) {
            var selectedOpts = $('#FarmSelected option');
            if (selectedOpts.length == 0) {
                alert("Nothing to move.");
                e.preventDefault();
            }
            $('#FarmId').append($(selectedOpts).clone());
            $(selectedOpts).remove();
            e.preventDefault();
        });

    });
</script>
<h2>Editar</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = true } })


            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RoleId, Model.Roles, "-- Seleccione Rol --")
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Enable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Enable)
            </div>
        </div>       
        <div class="form-group">
            <label class="control-label col-md-2" for="Establecimiento">Establecimientos</label>
            <div class="col-md-10">
                <div class="subject-info-box-1">
                    Disponibles
                    @Html.DropDownListFor(model => model.FarmId, Model.FarmsNotRelated, new { @class = "form-control", multiple = "multiple" })

                </div>
                <div class="subject-info-arrows text-center">
                    <input type="button" id="btnAllRight" value=">>" /><br />
                    <input type="button" id="btnRight" value=">" /><br />
                    <input type="button" id="btnLeft" value="<" /><br />
                    <input type="button" id="btnAllLeft" value="<<" />
                </div>
                <div class="subject-info-box-2">
                    Relacionadas
                    @Html.DropDownListFor(model => model.FarmId, Model.Farms, new { @class = "form-control", multiple = "multiple", id = "FarmSelected" })

                </div>
            </div>
            <div class="form-group">
                &nbsp;
                <div class="col-md-10">
                    &nbsp;
                </div>
            </div>
            <div class="cf footer">
                <label class="control-label col-md-2" for="CapitalId"></label>

                <input type="button" value="&nbsp;&nbsp;&nbsp;Gaurdar&nbsp;&nbsp;&nbsp;" id="SaveBtn" class="btn btn-default" />
                &nbsp;&nbsp;&nbsp;&nbsp;
                @Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
<div>
    &nbsp;
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

