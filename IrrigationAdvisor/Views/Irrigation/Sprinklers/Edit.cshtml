@model IrrigationAdvisor.ViewModels.Irrigation.SprinklerViewModel

@{
    ViewBag.Title = "Edit";
    //Layout = "Irrigation";
}
<script js>
    $(document).ready(function () {
        var saveBtn = $('#SaveBtn');
        var expresionLatitudeLongitud = /^(-([1-8]?[1-9]|[1-9]0)\,{1}\d{1,6})/;

        function isNumber(n) {
            'use strict';
            n = n.replace(/\./g, '').replace(',', '.');
            return !isNaN(parseFloat(n)) && isFinite(n);
        }

        saveBtn.click(function () {
            var validateForm = true;

            if ($('#ShortName').val().trim() != '') {
                $('#ShortNameError').html('');
                validateForm = true;
            }
            else {
                $('#ShortNameError').html('Ingrese el nombre');
                validateForm = false;
            }

            if (validateForm == true) {
                if ($('#IrrigationEfficiency').val().trim() != '' || $('#IrrigationEfficiency').val().trim() != '0') {
                    if (!isNumber($("#IrrigationEfficiency").val())) {
                        $("#IrrigationEfficiencyError").html("En la Eficiencia ingrese solo números");
                        validateForm = false;
                    }
                    else {
                        $('#IrrigationEfficiencyError').html('');
                        validateForm = true;
                    }
                }
                else {
                    $('#IrrigationEfficiencyError').html('Ingrese la eficiencia');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#Surface').val().trim() != '' || $('#Surface').val().trim() != '0') {
                    if (!isNumber($("#Surface").val())) {
                        $("#SurfaceError").html("En la Superficie ingrese solo números");
                        validateForm = false;
                    }
                    else {
                        $('#SurfaceError').html('');
                        validateForm = true;
                    }
                }
                else {
                    $('#Surface').html('Ingrese la superficie');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#PredeterminatedIrrigationQuantity').val().trim() != '' || $('#PredeterminatedIrrigationQuantity').val().trim() != '0') {
                    if (!isNumber($("#PredeterminatedIrrigationQuantity").val())) {
                        $("#PredeterminatedIrrigationQuantityError").html("En la Cantidad predeterminada ingrese solo números");
                        validateForm = false;
                    }
                    else {
                        $('#PredeterminatedIrrigationQuantityError').html('');
                        validateForm = true;
                    }
                }
                else {
                    $('#PredeterminatedIrrigationQuantity').html('Ingrese la cantidad predeterminada');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#FarmId').val().trim() != '') {
                    $('#FarmIdError').html('');
                    validateForm = true;
                }
                else {
                    $('#FarmIdError').html('Seleccione el Establecimiento');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#Latitude').val().trim() != '') {
                    if (!expresionLatitudeLongitud.test($("#Latitude").val())) {
                        $("#LatitudeError").html("La latitud no esta correctamente ingresada (Ej: -45,4455)");
                        validateForm = false;
                    }
                    else {
                        $('#LatitudeError').html('');
                        validateForm = true;
                    }
                }
                else {
                    $('#LatitudeError').html('Ingrese latitud');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#Longitude').val().trim() != '') {
                    if (!expresionLatitudeLongitud.test($("#Longitude").val())) {
                        $("#LongitudeError").html("La longitud no esta correctamente ingresada (Ej: -45,4455)");
                        validateForm = false;
                    }
                    else {
                        $('#LongitudeError').html('');
                        validateForm = true;
                    }
                }
                else {
                    $('#LongitudeError').html('Ingrese longitud');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#BombId').val().trim() != '' || $('#BombId').val() == "0") {
                    $('#BombIdError').html('');
                    validateForm = true;
                }
                else {
                    $('#BombIdError').html('Seleccione la Bomba');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#Width').val().trim() != '') {
                    if (!isNumber($("#Width").val())) {
                        $("#WidthError").html("En el Ancho ingrese solo números");
                        validateForm = false;
                    }
                    else {
                        $('#WidthError').html('');
                        validateForm = true;
                    }
                }
                else {
                    $('#WidthError').html('Ingrese el ancho');
                    validateForm = false;
                }
            }

            if (validateForm == true) {
                if ($('#Length').val().trim() != '') {
                    if (!isNumber($("#Length").val())) {
                        $("#LengthError").html("En el Largo ingrese solo números");
                        validateForm = false;
                    }
                    else {
                        $('#LengthError').html('');
                        validateForm = true;
                    }
                }
                else {
                    $('#LengthError').html('Ingrese el largo');
                    validateForm = false;
                }
            }


            if (validateForm == true) {

                $('#myForm').submit();
            }
        });



        window.onload = function () {
            loadBombs(@Model.BombId);
        };

        $('#FarmId').on('change', function (value) {
            loadBombs();
        });

        function loadBombs(pBombId) {
            var select = $("#BombId");
            select.empty();
            $('#Latitude').val('');
            $('#Longitude').val('');
            var pFarmId = $('#FarmId').val();
            if (pFarmId != "") {
                $.getJSON("/IrrigationUnit/GetBombsByFarmId", { farmId: pFarmId },
                       function (data) {

                           select.append($('<option/>', {
                               value: 0,
                               text: "-- Seleccion la bomba --"
                           }));
                           $.each(data, function (index, itemData) {

                               select.append($('<option/>', {
                                   value: itemData.Value,
                                   text: itemData.Text,
                                   selected: pBombId == itemData.Value
                               }));
                           });
                       });
                $.getJSON("/IrrigationUnit/GetLatitudByFarmId", { farmId: pFarmId },
                function (data) {
                    var a = data.Latitude.toString().replace('.', ',');
                    var b = data.Longitude.toString().replace('.', ',');
                    $('#Latitude').val(a);
                    $('#Longitude').val(b);
                });
            }
        };

    });
</script>
<h2>Editar</h2>

@using (Html.BeginForm("Edit", "Sprinklers", FormMethod.Post, new { id = "myForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Pivot</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IrrigationUnitId)

        <div class="form-group">
            <label class="control-label col-md-2">Nombre</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                <span id="ShortNameError" class="red-color"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Eficiencia</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.IrrigationEfficiency, new { htmlAttributes = new { @class = "form-control" } })
                <span id="IrrigationEfficiencyError" class="red-color"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Superficie</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surface, new { htmlAttributes = new { @class = "form-control" } })
                <span id="IrrigationEfficiencyError" class="red-color"></span>
            </div>
        </div>        <div class="form-group">
            <label class="control-label col-md-2">Riego predeterminado</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PredeterminatedIrrigationQuantity, new { htmlAttributes = new { @class = "form-control" } })
                <span id="PredeterminatedIrrigationQuantityError" class="red-color"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Visible</label>
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Show)

            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Establecimiento</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FarmId, Model.Farms, "-- Selecione establecimiento --", new { @class = "form-control", @onchange = "onChangeFarm(this.value)" })
                <span id="FarmIdError" class="red-color"></span>

            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Latitud</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                <span id="LatitudeError" class="red-color"></span>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Longitud</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                <span id="LongitudeError" class="red-color"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Bomba</label>
            <div class="col-md-10">
                <select id="BombId" name="BombId" class="form-control">
                    <option value="">-- Seleccione la bomba --</option>

                </select>
                <span id="BombIdError" class="red-color"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Tipo de riego</label>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.IrrigationType, new { htmlAttributes = new { @class = "control-label" } })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Ancho</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                <span id="RadiusError" class="red-color"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Largo</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
                <span id="RadiusError" class="red-color"></span>
            </div>
        </div>
        <div class="cf footer">
            <label class="control-label col-md-2" for="CapitalId"></label>

            <input type="button" value="&nbsp;&nbsp;&nbsp;Gaurdar&nbsp;&nbsp;&nbsp;" id="SaveBtn" class="btn btn-default" />
            &nbsp;&nbsp;&nbsp;&nbsp;
            @Html.ActionLink(linkText: "Volver a la lista", actionName: "Index", controllerName: "IrrigationUnit", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })


        </div>
    </div>
}

<div>
    &nbsp;
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
