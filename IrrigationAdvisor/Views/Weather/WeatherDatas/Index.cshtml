@model IEnumerable<IrrigationAdvisor.Models.Weather.WeatherData>

@{
    ViewBag.Title = "Index";
    //Layout = "Weather";
}
<script>


    $(document).ready(function () {

        var getUrlParameter = function getUrlParameter(sParam) {
            var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                sURLVariables = sPageURL.split('&'),
                sParameterName,
                i;

            for (i = 0; i < sURLVariables.length; i++) {
                sParameterName = sURLVariables[i].split('=');

                if (sParameterName[0] === sParam) {
                    return sParameterName[1] === undefined ? true : sParameterName[1];
                }
            }
        };


        
        var dateFrom = $('#dateFrom');
        var dateTo = $('#dateTo');
        var btnSearch = $('#btnSearch');
        var monthValue;

        if ((moment().month() + 1) < 10)
        {
            monthValue = '0' + (moment().month() + 1);
        }
        else
        {
            monthValue = (moment().month() + 1);
        }
        
        var today = moment().year() + '-' + monthValue + '-' + moment().date();
        //yyyy-MM-dd

        var startDate = getUrlParameter('pStartDateTime');
        
        var endDate = getUrlParameter('pEndDateTime');
        
        var weatherStation = getUrlParameter('pWeatherStationId');

        if (startDate && endDate)
        {
            $('#dateFrom').val(startDate);
            $('#dateTo').val(endDate);
        }
        else
        {
            $('#dateFrom').val(today);
            $('#dateTo').val(today);
        }

        $.ajax({
            type: 'GET',
            url: './WeatherDatas/GetAllWeatherStations',
            success: function (data) {

                var values = JSON.stringify(data);
                var ele = $('#weatherStations');

                ele.empty();
                ele.append('<option value="0">Todas</option>');
                $.each($.parseJSON(values), function (key, value) {
                    ele.append('<option value="' + value.WeatherStationId + '">' + value.Name + '</option>');
                });

                if (weatherStation) {
                    $('#weatherStations').val(weatherStation);
                }
            },
            error: function (data) {
               
                console.log(data);
            }
        });

        btnSearch.click(function ()
        {
            location.href = 'Weatherdatas?pStartDateTime=' + dateFrom.val() + '&pEndDateTime=' + dateTo.val() + '&pWeatherStationId=' + $('#weatherStations').val();
        });
    })
</script>
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <td>
            Fecha desde: <input type="date" id="dateFrom"/>
        </td>
        <td>
            Fecha hasta: <input type="date" id="dateTo"/>
        </td>
        <td>
            Weather Station: <select id="weatherStations"></select>&nbsp;&nbsp; <button id="btnSearch">Buscar</button>
        </td>
    </tr>
</table>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.WeatherStation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Date)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.Temperature)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.TemperatureMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TemperatureMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Evapotranspiration)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.EvapotranspirationMonth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EvapotranspirationYear)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WeatherDataType)
        </th>*@
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.WeatherStation.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.Temperature)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.TemperatureMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TemperatureMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Evapotranspiration)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.EvapotranspirationMonth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EvapotranspirationYear)
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.WeatherDataType)
        </td>*@
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.WeatherDataId }) |
            @*@Html.ActionLink("Details", "Details", new { id=item.WeatherDataId }) |*@
            @Html.ActionLink("Delete", "Delete", new { id=item.WeatherDataId })
        </td>
    </tr>
}

</table>
