//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IrrigationAdvisor.ConfirmIrrigationAdvices
{
    using System;
    using System.Collections.Generic;
    
    public partial class DailyRecord
    {
        public long DailyRecordId { get; set; }
        public System.DateTime DailyRecordDateTime { get; set; }
        public long MainWeatherDataId { get; set; }
        public long AlternativeWeatherDataId { get; set; }
        public int DaysAfterSowing { get; set; }
        public int DaysAfterSowingModified { get; set; }
        public double GrowingDegreeDays { get; set; }
        public double GrowingDegreeDaysAccumulated { get; set; }
        public double GrowingDegreeDaysModified { get; set; }
        public long RainId { get; set; }
        public long IrrigationId { get; set; }
        public System.DateTime LastWaterInputDate { get; set; }
        public System.DateTime LastBigWaterInputDate { get; set; }
        public System.DateTime LastPartialWaterInputDate { get; set; }
        public double LastPartialWaterInput { get; set; }
        public System.DateTime LastBigGapWaterInputDate { get; set; }
        public long EvapotranspirationCropId { get; set; }
        public double TotalEffectiveInputWater { get; set; }
        public double PercentageOfHydricBalance { get; set; }
        public double GAPPercentageOfHydricBalance { get; set; }
        public long PhenologicalStageId { get; set; }
        public double HydricBalance { get; set; }
        public double SoilHydricVolume { get; set; }
        public double TotalEvapotranspirationCropFromLastWaterInput { get; set; }
        public double CropCoefficient { get; set; }
        public string Observations { get; set; }
        public double TotalEvapotranspirationCrop { get; set; }
        public double TotalEffectiveRain { get; set; }
        public double TotalRealRain { get; set; }
        public double TotalIrrigation { get; set; }
        public double TotalIrrigationInHydricBalance { get; set; }
        public double TotalExtraIrrigation { get; set; }
        public double TotalExtraIrrigationInHydricBalance { get; set; }
        public Nullable<long> AlternativeWeatherData_WeatherDataId { get; set; }
        public Nullable<long> EvapotranspirationCrop_WaterOutputId { get; set; }
        public Nullable<long> Irrigation_WaterInputId { get; set; }
        public Nullable<long> MainWeatherData_WeatherDataId { get; set; }
        public Nullable<long> Rain_WaterInputId { get; set; }
        public long CropIrrigationWeatherId { get; set; }
        public System.DateTime LastDayOfGrowingDegreeDays { get; set; }
    
        public virtual Irrigation Irrigation { get; set; }
        public virtual CropIrrigationWeather CropIrrigationWeather { get; set; }
    }
}
